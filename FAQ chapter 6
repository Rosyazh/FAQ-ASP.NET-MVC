Изучение Главы 6 книги "Professional ASP.NET MVC 5".
              
Практическое задание к Главе 6 (для создания контроллеров, представлений, контекста данных используйте Scaffolding Template ! ! !):
- Создайте модель данных со следующими свойствами: Id, Имя, Фамилия, Логин, Возраст, Адрес электронной почты, Подтверждение адреса электронной почты, Донат, Дата внесения доната, Код подразделения. Все свойства должны быть обязательными. Id должен быть скрытым от пользователя. Имя и фамилия должны быть длиной от 3 до 20 симоволов. Логин не должен быть включен в представления при использовании Scaffolding Templates. Возраст должен быть от 21 до 55. Адрес электронной почты и подтвержденный адрес электронной почты должны совпадать. Донат должен иметь денежный формат. Дата внесения доната должна быть соответсвующего типа/формата. Код подразделения должен быть нередактируемым. Фамилия должна принимать одно из трех значений (Иванов, Петров, Сидоров) - для этих целей создайте кастомный аттрибут и эти три значения должны задаваться при декларации аттрибута в модели ( [RestrictedNames(new[] { "Иванов", "Петров", "Сидоров" })] ). Модель должна считаться также невалидной, если Фамилия = Иванов и Донат < 10. Во всех аттрибутах валидации должны быть определены тексты сообщения об ошибках. Все свойства должны иметь дружественные пользователю имена при отображении в представлениях.
- Создайте контроллер и представления, а также контекст данных при помощи Scaffolding Template.
              
Контрольные вопросы к Главе 6:
- Что такое аннотации валидации и к какому пространству имен они относятся?
- Аттрибут, декларирующий свойство модели как обязательное.
- Аттрибут, декларирующий длину строки текстового свойства модели.
- Аттрибут, определяющий текстовый шаблон для свойства модели.
- Аттрибут, определяющий числовой диапозон для свойства модели.
- Аттрибут, обязывающий свойства иметь одинаковые значения.
- Аттрибут, позволяющий осуществлять валидацию на стороне клиента с обращениями к серверу.
- Как установить текст ошибок для вывода при валидации? Как обеспечить вывод читабельной версии свойства модель в тексте ошибки? Как обеспечить вывод текста ошибки валидации на различных языках для различных локаций?
- В какой момент осуществляется валидация? Как осуществить явную привязку к модели? Валидация и состояние модели. Хелперы валидации.
- Custom validation logic vs default validation logic.
- От какого класса наследуются аттрибуты валидации?
- Опишите реализацию кастомизированной логики валидации (custom validation).
- Как встроить валидацию в сам класс модели?
- Как при помощи аттрибутов аннотации установить отображаемую для пользователя версию название свойства и порядок следования свойств в пользовательском интерфейсе?
- Аттрибут для исключения свойства модели из представления при использовании шаблонов.
- Аттрибут для форматированного отображения значения свойства модели.
- Аттрибут, запрещающий редактировать свойство модели.
- Аттрибут, определяющий тип значения свойства модели, например пароль. Какие еще типы могут быть определены посредством данного аттрибута.
- Посредством какого аттрибута можно задать шаблон для свойства модели при его отображении хелперами DisplayFor, EditorFor?
- Аттрибут, скрывающий свойство модели в представлении.
