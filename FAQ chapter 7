Изучение Главы 7 книги "Professional ASP.NET MVC 5".
              
Практическое задание к Главе 7:
- создайте приложение с аутентификацией, предусматривающей индивидуальные учетные записи пользователей (см. соответвующую опцию)
- в созданном приложении посмотрите код контроллеров и приведите пример контроллера, обязывающего пройти аутентификацию/авторизацию, приведите пример действия контроллера, явно разрешающего анонимный доступ и объясните, зачем в данном случае разрешен анонимный доступ
- запретите анонимный доступ к контроллеру HomeController, явно разрешите анонимный доступ к действию About контроллера Home, запретите анонимный доступ ко всем контроллерам приложения, разрешите доступ к действию Index контроллера HomeController только для пользователя John и для пользователей с ролью Admin
- добавьте свойство Address в учетную запись, обновив классы RegisterViewModel (AccountViewModels.cs), ApplicationUser (IdentityModels.cs) и соответвующие действие контроллера и представление для регистрации учетной записи. Есть пример добавления новых свойств в учетную запись: https://blogs.msdn.microsoft.com/webdev/2013/10/16/customizing-profile-information-in-asp-net-identity-in-vs-2013-templates/
- добавьте возможность обращение к вашему приложению при использовании SSL/HTTPS, для контроллера Home разрешите обращение только посредством SSL/HTTPS
- добавьте возможность логиниться посредством сторонней аутентификации, одного из распространенных провайдеров аутентификации, например Google
(инструкция: https://docs.microsoft.com/en-us/aspnet/mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on
используйте URL без / в конце: https://localhost:44300
вызов NuGet: TOOLS > NuGet Package Manager > Manage NuGet Packages for Solution)
- проверьте представление Index для контроллера Home, обеспечивается ли предотвращение XSS-аттак
- проверьте действия контроллера Home, установлен ли аттрибут, предотвращающий Cross-Site Request Forgery аттаку, если не установлен, то установите его
- обеспечьте сохранность кукисов (для модели учетной записи), используемых в приложении, от хищения посредством JavaScript https://msdn.microsoft.com/en-us/library/ms228262(v=vs.100).aspx
- проверьте, устойчив ли POST метод Login контроллера Account к Open Redirect аттакам
- в корневом каталоге приложения создайте страницу Error.html и обеспечьте перенаправление на эту страницу в случае возникновения ошибки, запустите приложение и сгенерируйте ошибку посредством обращения к несуществующему контроллеру
              
Контрольные вопросы к Главе 7:
- Что такое аутентификация? Что такое авторизация?
- Как предотвратить анонимное обращение к действию контроллера? ко всем действиям контроллера? ко всему ASP.NET MVC приложению? как разрешить анонимный доступ к определенному действию или контроллеру?
- Как аттрибут Authorize работает?
- Как работает аутентификация Windows и как ее сконфигурировать для приложения (IIS 7/8, IIS Express)?
- Как ограничить действия контроллера для определенных ролей и/или пользователей?
- Users vs Roles. Roles vs Claims.
- Как добавить дополнительные поля в профайл пользователя?
- Какие классы используются для управления ролями и пользователями в ASP.NET Identity?
- Стороння аутентификация и ее преимущества.
- Registering External Login Providers. Configuring OpenID Providers. Configuring OAuth Providers.
- Соображения безопасности при использовании сторонней аутентификации.
- SSL/HTTPS при аутентификации.
- Виды угроз безопасности веб приложений и способы их предотвращения, в частности в контексте ASP.NET MVC.
- Proper Error Reporting and the Stack Trace. Using Configuration Transforms. Using Retail Deployment Configuration in Production. Using a dedicated Error Loging System.
